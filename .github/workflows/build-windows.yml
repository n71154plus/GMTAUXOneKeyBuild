name: Build Windows (Go + cgo + giu)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g. v1.0.0)"
        required: false
        default: "manual"

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    env:
      GOOS: windows
      GOARCH: amd64

    steps:
      - uses: actions/checkout@v4

      # {U+2461} Go�Gsetup-go ���ا֨��]�Ҳ� + ���� build ��X�^
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      # {U+2462}�]�i��^�֨� GOBIN�G�� go install ���u��]�O��
      - name: Cache GOBIN
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}\gobin
          key: gobin-${{ runner.os }}-${{ hashFiles('**/go.mod') }}

      - name: Set GOBIN
        shell: pwsh
        run: |
          $env:GOBIN="${{ runner.temp }}\gobin"
          go env -w GOBIN="$env:GOBIN"
          echo "GOBIN=$env:GOBIN" >> $env:GITHUB_ENV

      # {U+2463}�]�i��^���ʨç֨� GOCACHE�]��í�w�R�� & I/O ���֡^
      - name: Cache GOCACHE
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}\gocache
          key: gocache-${{ runner.os }}-${{ hashFiles('**/go.sum') }}

      - name: Set GOCACHE
        shell: pwsh
        run: |
          $env:GOCACHE="${{ runner.temp }}\gocache"
          go env -w GOCACHE="$env:GOCACHE"
          echo "GOCACHE=$env:GOCACHE" >> $env:GITHUB_ENV

      # ��ܤu���쪩���]�����Ρ^
      - name: Show toolchain
        shell: bash
        run: |
          go version
          go env

      # Build
      - name: Build (CGO + giu)
        shell: bash
        run: |
          mkdir -p dist
          # �p�� GUI �{���i�令�G-ldflags "-H=windowsgui -s -w"
          go build -v -trimpath -buildvcs=false -ldflags "-s -w" -o dist/app.exe ./

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-windows-amd64-${{ github.sha }}
          path: dist/app.exe

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-windows-amd64-${{ github.sha }}
          path: dist

      - name: Generate checksums
        shell: pwsh
        run: |
          Get-FileHash dist\app.exe -Algorithm SHA256 | ForEach-Object {
            "$($_.Hash)  app.exe" | Out-File -FilePath dist\SHA256SUMS.txt -Encoding ascii
          }

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/app.exe
            dist/SHA256SUMS.txt
